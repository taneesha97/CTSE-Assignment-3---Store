# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install

    - name: docker build
      run: docker build -t '${{secrets.DOCKER_LOGIN}}'/ctse-assignment-microservices:'${{github.sha}}' .

    - name: docker login
      run: docker login --username '${{secrets.DOCKER_LOGIN}}' --password '${{secrets.DOCKER_PASSWORD}}'

    - name: push docker image
      run: docker push '${{secrets.DOCKER_LOGIN}}'/ctse-assignment-microservices:'${{github.sha}}'

    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: '${{secrets.AZURE_CREDENTIALS}}'
          # Resource Group Name
          resource-group: ctse-project
          # AKS Cluster Name
          cluster-name: ctse-project-cluster
# Create K8s secrets to pull images
  - name: Create secret in Kubernetes cluster
    uses: Azure/k8s-create-secret@v1.1
    with:
    # Container registry url
      container-registry-url: https://index.docker.io/v1/
      # Container registry username
      container-registry-username: '${{secrets.DOCKER_LOGIN}}'
      # Container registry password
      container-registry-password: '${{secrets.DOCKER_PASSWORD}}'
      # Type of Kubernetes secret. For example, docker-registry or generic
      secret-type: docker-registry
      # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
      secret-name: docker-image-pull-secret

    # Deploy to k8s cluster
  - name: Deploy to Kubernetes cluster
    uses: Azure/k8s-deploy@v1
    with:
      # Path to the manifest files which will be used for deployment.
      manifests: |
        k8s/deployment.yml
        k8s/service.yml
      # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
      images: '${{secrets.DOCKER_LOGIN}}/ctse-assignment-microservices:${{github.sha}}'
      # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
      imagepullsecrets: docker-image-pull-secret
      # deploy/promote/reject
      action: deploy



